@use 'sass:math';
@use 'styles/themes' as *;

$story-page-min-width: 650px;
$story-page-padding: 25px;

.story-page {
	&-container {
		display: flex;
		justify-content: center;
		padding: 7px 0 23px 0;
	}

	// `display: table;` conveniently allows the element's width to dynamically increase to fit its contents exactly the way we want it to.
	display: table;
	box-sizing: border-box;
	padding: 0 $story-page-padding;
	width: $story-page-min-width;
	// `min-width` is necessary and must equal `width` because it is used by an effect hook to calculate this element's content width.
	min-width: $story-page-min-width;

	@include mobile {
		width: 100%;
		min-width: 100%;
	}

	&-title {
		text-align: center;
		padding: 14px 5px;
		font-size: xx-large;
		// Do not assume the theme's default `font-weight` is `bold`.
		font-weight: bold;
	}

	&-content {
		text-align: center;
		padding-bottom: 14px;
		font-size: 0.875em;
		line-height: 1;

		* {
			// This is necessary so an effect hook can detect the original width of elements which should be classed with the `panel` class.
			max-width: none;
		}
	}

	&-links, &-footer {
		padding: 17px 0;
		@include theme(font, alt-font);
		font-weight: normal;
	}

	&-links {
		font-size: x-large;
	}

	&-link-container::before {
		content: '> ';
	}

	&-footer {
		font-size: 0.875em;

		&-group {
			font-size: math.div(10, 14) * 1em;

			&-delimiter::before {
				content: '             ';
				white-space: pre;

				@include mobile {
					content: '';
					display: block;
					// Separate the lines apart a bit to prevent mistapping.
					height: 1.5em;
				}
			}
		}

		.link {
			font-weight: bold;
		}
	}
}

.panel {
	margin: 0 (-$story-page-padding);
	// This subtracted constant is to mimic the horizontal padding of the page container on http://web.archive.org/web/20141103155157/http://www.mspaintadventures.com/index_hscroll.php?s=6&p=008848.
	max-width: $page-width - (1200px - 1107px);

	@include mobile {
		// For browsers that don't support `vw` which might have a viewport width smaller than `$page-width`.
		max-width: 100%;
		// We use `vw` instead of `%` because we want to ignore the padding of the container.
		max-width: 100vw;
	}
}