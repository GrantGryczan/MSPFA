@use 'styles/themes' as *;
@use 'styles/depth-effect' as *;

dialog {
	// This is a flexbox in order to prevent the children from overflowing.
	display: flex;
	flex-direction: column;
	pointer-events: auto;
	position: relative;
	max-height: 100%;
	min-width: 320px;
	max-width: 880px;
	animation: 0.05s step-end dialog-pop;

	// Undo default `dialog` element styles.
	margin: 0;
	padding: 0;
	color: inherit;
	background: none;
	border: none;
	@include theme(border-color, alt-front-color);

	// The shadow. This is a pseudo-element rather than using `box-shadow` so its color can be adjusted at runtime via CSS variables.
	&::after {
		content: '';
		position: absolute;
		width: 100%;
		height: 100%;
		z-index: -10;
		top: 16px;
		left: 16px;
		padding: 2px;
		opacity: 0.25;
		pointer-events: none;
		@include theme(background-color, back-color);
	}
}

.dialog {
	$horizontal-text-padding: 0.875rem;

	&-title, &-body {
		position: relative;
		@include depth-effect(
			$scale: 2px,
			$border: true,
			$no-transparent-border: true
		);

		&::before {
			content: '';
			position: absolute;
			left: 0;
			top: 0;
			width: 100%;
			height: 100%;
			z-index: -1;
		}
	}

	&-title {
		padding: ($horizontal-text-padding / 2) $horizontal-text-padding;
		@include theme(font, heading-font);
		font-size: 1.75em;

		&::before {
			@include depth-effect-color(alt-front-color);
		}
	}

	&-body {
		display: flex;
		flex-direction: column;
		// Overwrite the default `min-height: auto` that flex items have so this item can't overflow its parent.
		min-height: 0;

		&::before {
			margin-top: 0;
			padding-top: 2px;
			@include depth-effect-color(front-color);
		}
	}

	&-content {
		padding: 1rem $horizontal-text-padding;
		overflow-y: auto;
		overflow-x: hidden;
		white-space: pre-wrap;
	}

	&-actions {
		padding: 1rem;
		text-align: right;
	}
}

@keyframes dialog-pop {
	from {
		transform: translate(-2px, -2px);
	}
}
