// This file is automatically generated by `scripts/generate-validators`. Do not edit directly.

import { createValidator } from 'modules/server/api';

export default createValidator({
	$schema: 'http://json-schema.org/draft-07/schema#',
	$ref: '#/definitions/RequestMethod',
	definitions: {
		RequestMethod: {
			type: 'string',
			const: 'PUT'
		}
	}
}, {
	$schema: 'http://json-schema.org/draft-07/schema#',
	$ref: '#/definitions/Request',
	definitions: {
		Request: {
			type: 'object',
			additionalProperties: false,
			properties: {
				body: {
					type: 'object',
					additionalProperties: {
						anyOf: [
							{
								type: 'object',
								additionalProperties: false,
								properties: {
									published: {
										anyOf: [
											{
												$ref: '#/definitions/DateNumber'
											},
											{
												type: 'null'
											}
										]
									},
									id: {
										$ref: '#/definitions/StoryPageID'
									},
									title: {
										type: 'string',
										maxLength: 500
									},
									content: {
										type: 'string'
									},
									nextPages: {
										type: 'array',
										items: {
											type: 'number'
										}
									},
									unlisted: {
										type: 'boolean'
									},
									disableControls: {
										type: 'boolean',
										description: 'Whether the client\'s controls should be disabled while this page is rendered.'
									},
									commentary: {
										type: 'string'
									},
									notify: {
										type: 'boolean',
										description: 'Whether this page was set to notify readers on publish.'
									}
								},
								required: [
									'commentary',
									'content',
									'disableControls',
									'id',
									'nextPages',
									'notify',
									'title',
									'unlisted'
								]
							},
							{
								type: 'object',
								additionalProperties: false,
								properties: {
									published: {
										anyOf: [
											{
												$ref: '#/definitions/DateNumber'
											},
											{
												type: 'null'
											}
										]
									},
									title: {
										type: 'string',
										maxLength: 500
									},
									content: {
										type: 'string'
									},
									nextPages: {
										type: 'array',
										items: {
											type: 'number'
										}
									},
									unlisted: {
										type: 'boolean'
									},
									disableControls: {
										type: 'boolean',
										description: 'Whether the client\'s controls should be disabled while this page is rendered.'
									},
									commentary: {
										type: 'string'
									},
									notify: {
										type: 'boolean',
										description: 'Whether this page was set to notify readers on publish.'
									}
								}
							}
						]
					},
					description: 'A record of `ClientStoryPage`s (some of which are partial) to add or change.'
				},
				query: {
					type: 'object',
					properties: {
						storyID: {
							type: 'string'
						}
					},
					required: [
						'storyID'
					],
					additionalProperties: false
				},
				method: {
					type: 'string',
					const: 'PUT'
				}
			},
			required: [
				'body',
				'method',
				'query'
			]
		},
		DateNumber: {
			type: 'number',
			minimum: -8640000000000000,
			maximum: 8640000000000000
		},
		StoryPageID: {
			type: 'number',
			minimum: 1
		}
	}
});